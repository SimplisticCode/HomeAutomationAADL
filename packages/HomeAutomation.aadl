package HomeAutomation
public
	with Base_Types, Data_Model;
	  
	system HA
    end HA;

    system implementation HA.impl
        subcomponents
            humid_sensor: device sensor.humid;
            temp_sensor: device sensor.temp;
            window: device actuator.Window;
            termostat: device actuator.Termostat;
            HA_control: process hostController.PeriodicOp;
           
            cpu1 : processor cpu_1MHz.cpu1;
            cpu2 : processor cpu_1MHz.cpu2;
            cpu3 : processor cpu_1MHz.cpu3;
            cpu4 : processor cpu_1MHz.cpu4;
            cpu5 : processor cpu_1MHz.cpu5;       
            bus_1 : bus bus1.realBus;          
            
    	connections
    		DC1: port temp_sensor.sensor_data -> HA_control.tempValue;
    		DC2: port humid_sensor.sensor_data -> HA_control.humidValue;    		
    		DC3: port HA_control.windowCMD -> window.cmd;
    		DC4: port HA_control.termostatCMD -> termostat.cmd;
    		 		
    		BAC1 : bus access bus_1 <-> cpu1.BA1;
    		BAC2 : bus access bus_1 <-> cpu2.BA1;
    		BAC3 : bus access bus_1 <-> cpu3.BA1;
    		BAC4 : bus access bus_1 <-> cpu4.BA1;
    		BAC5 : bus access bus_1 <-> cpu5.BA1;

    		BAC6 : bus access bus_1 <-> humid_sensor.BA1;
    		BAC7 : bus access bus_1 <-> temp_sensor.BA1; 
    		BAC8 : bus access bus_1 <-> window.BA1;
    		BAC9 : bus access bus_1 <-> termostat.BA1;  		
    	properties
    		-- Bind Process to CPUs
    		Allowed_Processor_Binding => (reference(cpu1))
    		applies to HA_control.UpdateValues;
    		Allowed_Processor_Binding => (reference(cpu1))
    		applies to HA_control.algorithm;
    		
    end HA.impl;
    
    -- Now, declare the virtual processors that model
	-- partition runtime.
	
	-- Freq: 1 * 10^6 and First Come First Serve (Round Robin)
	processor cpu_1MHz
		features
			BA1: requires bus access bus1.realBus;
		properties
			Clock_Period => 1000ns;
			Scheduling_Protocol => (Round_Robin_Protocol);
	      	Thread_Swap_Execution_Time => 5 us.. 10 us; -- Dont know
	      	Clock_Jitter => 5 ps; -- Dont know
	end cpu_1MHz;
	
	-- 5 CPUs with same specs
	processor implementation cpu_1MHz.cpu1	
	end cpu_1MHz.cpu1;
	
	processor implementation cpu_1MHz.cpu2		
	end cpu_1MHz.cpu2;

	processor implementation cpu_1MHz.cpu3	
	end cpu_1MHz.cpu3;
	
	processor implementation cpu_1MHz.cpu4		
	end cpu_1MHz.cpu4;
	
	processor implementation cpu_1MHz.cpu5	
	end cpu_1MHz.cpu5;
	
	
	--Bus
	-- Freq: 1 * 10^3 and First Come First Serve (Round Robin)
	bus bus1
	properties
		 Transmission_Time => [Fixed => 1ms .. 2ms; PerByte=> 1ms .. 2ms;];
	end bus1;
	
	bus implementation bus1.realBus
	end bus1.realBus;
	
	
	-- Process
	process hostController
		features			
			set_TargetTemp: in data port;
			set_TargetHumid: in data port; 
			tempValue: in data port;
			humidValue: in data port;
			windowCmd: out data port;
			termostatCMD: out data port; 
	end HostController;
	
	process implementation hostController.PeriodicOp
		subcomponents
			updateValues: thread update_values.env;
			algorithm: thread algorithm.ex;
			
	end hostController.PeriodicOp;	
	-- Devices
	
	--Sensors
	device sensor
		features
		sensor_data: out data port;
		BA1: requires bus access bus1.realBus;
	end sensor;
	
	device implementation sensor.temp
	end sensor.temp;
	
	device implementation sensor.humid
	end sensor.humid;
	
	-- Actuators
	device actuator
		features
		cmd: in data port;
		BA1: requires bus access bus1.realBus;
		
	end actuator;
	
	device implementation actuator.Termostat
	end actuator.Termostat;
	
	device implementation actuator.Window
	end actuator.Window;
	
	process implementation HostController.HA
		
	end HostController.HA;
	
	-- Threads
	
	thread algorithm
	features
    	windowCMD: out data port WinCMD;
    	termostatCDM: in data port TermostatCMD;
	properties
	   Priority => 10;
	   Period => 1000 ms;
	   Compute_Execution_Time => 8 ms .. 10 ms;
	   Deadline => 1000 ms; 
	   Dispatch_Protocol => Periodic;
	end algorithm;
	
	thread implementation   algorithm.ex
	end                     algorithm.ex;
	
	thread update_values
	features
    	Temp: in event data port Temperature;
    	Humid: in event data port Temperature;
	properties
	   Priority => 10;
	   Period => 1000 ms;
	   Compute_Execution_Time => 8 ms .. 10 ms;
	   Deadline => 1000 ms; 
	   Dispatch_Protocol => Periodic;
	end update_values;
	
	thread implementation   update_values.env
	end                     update_values.env;

	-- 1*10^3 Cycles 
	-- Period 1000 * 10^6
	-- Deadline same as Period
	thread HumidSensor_Step
	features
    	Humid_out: out event data port Humidity;
    	Humid_in: in event data port Humidity;
	properties
	   Priority => 10;
	   Period => 1000 ms;
	   Compute_Execution_Time => 1ms .. 1ms;
	   Deadline => 1000 ms; 
	   Dispatch_Protocol => Periodic;
	end HumidSensor_Step;
	
	thread implementation   HumidSensor_Step.impl
	end                     HumidSensor_Step.impl;
	
	-- 1*10^3 Cycles 
	-- Period 1000 * 10^6
	-- Deadline same as Period
	thread TemperatureSensor_Step
	features
    	Temp_in: in event data port Temperature;
     	Temp_out: in event data port Temperature;
	properties
	   Priority => 10;
	   Period => 1000 ms;
	   Compute_Execution_Time => 1ms .. 1ms;
	   Deadline => 1000 ms; 
	   Dispatch_Protocol => Periodic;
	end TemperatureSensor_Step;
	
	thread implementation   TemperatureSensor_Step.impl
	end                     TemperatureSensor_Step.impl;
	
	-- 1*10^3 Cycles 
	-- Period 1000 * 10^6
	-- Deadline same as Period
	thread Thermostat_Step
	features
	  TermostatCmd : in event data port TermostatCMD;
	  TermostatAct : out event data port TermostatCMD;
	properties
	   Priority => 10;
	   Period => 1000 ms;
	   Compute_Execution_Time => 1ms .. 1ms;
	   Deadline => 1000 ms; 
	   Dispatch_Protocol => Periodic;
	end Thermostat_Step;
	
	thread implementation   Thermostat_Step.impl
	end                     Thermostat_Step.impl;
	
	-- 1*10^3 Cycles 
	-- Period 1000 * 10^6
	-- Deadline same as Period
	thread Window_Step
	features
	  windowCmd : in event data port WinCMD;
	  windowAct : out event port;
	 properties
	   Priority => 10;
	   Period => 1000 ms;
	   Compute_Execution_Time => 1ms .. 1ms;
	   Deadline => 1000 ms; 
	   Dispatch_Protocol => Periodic;
	end Window_Step;
	
	thread implementation   Window_Step.impl
	end                     Window_Step.impl;
	
	-- No duration
	-- Period 1000 * 10^6
	-- Deadline same as Period
	thread Environment_CreateSignal
	properties
	   Priority => 10;
	   Period => 1000 ms;
	   Compute_Execution_Time => 0ns .. 1ns;
	   Deadline => 1000 ms; 
	   Dispatch_Protocol => Periodic;
	end Environment_CreateSignal;
	
	thread implementation   Environment_CreateSignal.impl
	end                     Environment_CreateSignal.impl;
	
	--data
data WinCmd
  properties
    Data_Model::Data_Representation => Enum;
    Data_Model::Enumerators => ("OPEN", "CLOSE");
end WinCmd;


data TermostatCMD
  properties
    Data_Model::Data_Representation => Enum;
    Data_Model::Enumerators => ("INC", "DEC");
end TermostatCMD;

data Temperature
  properties
    Data_Model::Data_Representation => Struct;
    Data_Model::Element_Names =>
      ("degrees",
       "unit"
      );
    Data_Model::Base_Type =>
      ( classifier(Base_Types::Float));
end Temperature;

data Humidity
  properties
    Data_Model::Base_Type =>( classifier(Base_Types::Float));
end Humidity;

end HomeAutomation;