package HomeAutomation
public
	with Base_Types, Data_Model;
	  
	system HA
    end HA;

    system implementation HA.impl
		subcomponents
			humid_sensor: process HumiditySensor.Step;
			temp_sensor: process TempSensor.Step;
			window: process Window.Step;
			termostat: process Heater.Step;
			HA_control: process hostController.PeriodicOp;
			cpu1: processor cpu_1MHz.cpu1;
			cpu2: processor cpu_1MHz.cpu2;
			cpu3: processor cpu_1MHz.cpu3;
			cpu4: processor cpu_1MHz.cpu4;
			cpu5: processor cpu_1MHz.cpu5;
			
			envir: process Envir.impl;
			
		connections
			DC1: port temp_sensor.tempValue -> HA_control.tempValue;
			DC2: port humid_sensor.humidValue -> HA_control.humidValue;
			DC3: port HA_control.windowCmd -> window.cmd;
			DC4: port HA_control.termostatCMD -> termostat.cmd;
		
	  		--DC5: port window.cmd -> envir.windowAct;
	  		--DC6: port termostat.cmd -> envir.TermostatAct;
	  		--DC7: port envir.humidity -> humid_sensor.inHumidValue ;
	  		--DC8: port envir.temperatur -> temp_sensor.inTempValue ;
			
		properties
				-- Bind Process to CPUs
			Allowed_Processor_Binding => (reference (cpu1))
    		applies to HA_control.algorithm;
					-- Bind Process to CPUs
			Allowed_Processor_Binding => (reference (cpu2))
    		applies to humid_sensor.update;
					-- Bind Process to CPUs
			Allowed_Processor_Binding => (reference (cpu3))
    		applies to temp_sensor.update;
					-- Bind Process to CPUs
			Allowed_Processor_Binding => (reference (cpu4))
    		applies to termostat.update;
					-- Bind Process to CPUs
			Allowed_Processor_Binding => (reference (cpu5))
    		applies to window.update;
			Allowed_Processor_Binding => (reference (cpu1));
	end HA.impl;
    
    -- Now, declare the virtual processors that model
	-- partition runtime.
	
	-- Freq: 1 * 10^6 and First Come First Serve (Round Robin)
	processor cpu_1MHz
		properties
			Clock_Period => 1000ns;
			Scheduling_Protocol => (Round_Robin_Protocol);
	      	Thread_Swap_Execution_Time => 5 us.. 10 us; -- Dont know
	      	Clock_Jitter => 5 ps; -- Dont know
	end cpu_1MHz;
	
	-- 5 CPUs with same specs
	processor implementation cpu_1MHz.cpu1	
	end cpu_1MHz.cpu1;
	
	processor implementation cpu_1MHz.cpu2		
	end cpu_1MHz.cpu2;

	processor implementation cpu_1MHz.cpu3	
	end cpu_1MHz.cpu3;
	
	processor implementation cpu_1MHz.cpu4		
	end cpu_1MHz.cpu4;
	
	processor implementation cpu_1MHz.cpu5	
	end cpu_1MHz.cpu5;
	
	
	-- Process
	process hostController
		features			
			set_TargetTemp: in data port;
			set_TargetHumid: in data port; 
			tempValue: in data port Temperature;
			humidValue: in data port Humidity;
			windowCmd: out event data port WinCMD;
			termostatCMD: out event data port TermostatCMD; 
	end HostController;
	
	process implementation hostController.PeriodicOp
		subcomponents
			algorithm: thread algorithm.ex;				
	end hostController.PeriodicOp;	
	
	process Envir
		features
	  		windowAct : in feature;  --abstract
	  		TermostatAct : in feature;  --abstract
	  		humidity : out feature;  --abstract
	  		temperatur : out feature;  --abstract
	end Envir;
	
	process implementation Envir.impl
		subcomponents
			algorithm: thread Environment.impl;		
	end Envir.impl;	

	
	-- Processes - sensors
	process TempSensor
		features			
			tempValue: out data port Temperature;
			inTempValue: in feature;
	end TempSensor;
	
	process implementation TempSensor.Step
		subcomponents
			update: thread TemperatureSensor_Step.impl;		
	end TempSensor.Step;
	
	process HumiditySensor
		features			
			humidValue: out data port Humidity;
			inHumidValue: in feature;
			
	end HumiditySensor;
	
	process implementation HumiditySensor.Step
		subcomponents
			update: thread HumidSensor_Step.impl;		
	end HumiditySensor.Step;		

	-- Processes - actuators
	process Heater
		features
			cmd: in event data port TermostatCMD;
			tempValue: out feature;
	end Heater;
	
	process implementation Heater.Step
		subcomponents
			update: thread Thermostat_Step.impl;		
	end Heater.Step;
	
	process Window
		features
			cmd: in event data port WinCMD;
			tempValue: out feature;
	end Window;
	
	process implementation Window.Step
		subcomponents
			update: thread Window_Step.impl;		
	end Window.Step;

	
	-- Threads
	
	thread algorithm
	features
    	windowCMD: out data port WinCMD;
    	termostatCDM: in data port TermostatCMD;
    	Temp: in event data port Temperature;
    	Humid: in event data port Humidity;
	properties
	   Priority => 10;
	   Period => 1000 ms;
	   Compute_Execution_Time => 8 ms .. 10 ms;
	   Deadline => 1000 ms; 
	   Dispatch_Protocol => Periodic;
	end algorithm;
	
	thread implementation   algorithm.ex
	end                     algorithm.ex;
	

	-- 1*10^3 Cycles 
	-- Period 1000 * 10^6
	-- Deadline same as Period
	thread HumidSensor_Step
	features
    	Humid_out: out event data port Humidity;
    	Humid_in: in event data port Humidity; --abstract port
	properties
	   Priority => 10;
	   Period => 1000 ms;
	   Compute_Execution_Time => 1ms .. 1ms;
	   Deadline => 1000 ms; 
	   Dispatch_Protocol => Periodic;
	end HumidSensor_Step;
	
	thread implementation   HumidSensor_Step.impl
	end                     HumidSensor_Step.impl;
	
	-- 1*10^3 Cycles 
	-- Period 1000 * 10^6
	-- Deadline same as Period
	thread TemperatureSensor_Step
	features
    	Temp_in: in event data port Temperature; --abstract port
     	Temp_out: in event data port Temperature;
	properties
	   Priority => 10;
	   Period => 1000 ms;
	   Compute_Execution_Time => 1ms .. 1ms;
	   --Deadline => 1000 ms; 
	   Dispatch_Protocol => Periodic;
	end TemperatureSensor_Step;
	
	thread implementation   TemperatureSensor_Step.impl
	end                     TemperatureSensor_Step.impl;
	
	-- 1*10^3 Cycles 
	-- Period 1000 * 10^6
	-- Deadline same as Period
	thread Thermostat_Step
	features
	  TermostatCmd : in event data port TermostatCMD;
	  TermostatAct : out event data port; --abstract
	properties
	   Priority => 10;
	   Compute_Execution_Time => 1ms .. 1ms;
	   Deadline => 1000 ms; 
	   Dispatch_Protocol => Sporadic;
	end Thermostat_Step;
	
	thread implementation   Thermostat_Step.impl
	end                     Thermostat_Step.impl;
	
	-- 1*10^3 Cycles 
	-- Period 1000 * 10^6
	-- Deadline same as Period
	thread Window_Step
	features
	  windowCmd : in event data port WinCMD;
	  windowAct : out event port;  --abstract
	 properties
	   Priority => 10;
	   Compute_Execution_Time => 1ms .. 1ms;
	   Deadline => 1000 ms; 
	   Dispatch_Protocol => Sporadic;
	end Window_Step;
	
	thread implementation   Window_Step.impl
	end                     Window_Step.impl;
	
	-- No duration
	-- Period 1000 * 10^6
	-- Deadline same as Period
	thread Environment
		features
	  		windowAct : in feature;  --abstract
	  		TermostatAct : in feature;  --abstract
	  		humidity : out feature;  --abstract
	  		temperatur : out feature;  --abstract
		properties
		   Priority => 10;
		   Compute_Execution_Time => 0ns .. 1ns;
		   Deadline => 1000 ms; 
		   Dispatch_Protocol => Sporadic;
	end Environment;
	
	thread implementation   Environment.impl
	end                     Environment.impl;
	
--data
data WinCmd
  properties
    Data_Model::Data_Representation => Enum;
    Data_Model::Enumerators => ("OPEN", "CLOSE");
end WinCmd;


data TermostatCMD
  properties
    Data_Model::Data_Representation => Enum;
    Data_Model::Enumerators => ("INC", "DEC");
end TermostatCMD;

data Temperature
  properties
    Data_Model::Data_Representation => Struct;
    Data_Model::Element_Names =>
      ("degrees",
       "unit"
      );
    Data_Model::Base_Type =>
      ( classifier(Base_Types::Integer));
end Temperature;

data Humidity
  properties
    Data_Model::Base_Type =>( classifier(Base_Types::Integer));
end Humidity;

end HomeAutomation;